[{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"introduction-to-ghcn-d-and-aws","dir":"Articles","previous_headings":"","what":"Introduction to GHCN-D and AWS","title":"ghcn","text":"Global Historical Climatology Network - Daily (GHCN-D) comprehensive database daily climate summaries land surface stations across globe. dataset maintained NOAA’s National Centers Environmental Information (NCEI) includes records 100,000 stations 180 countries territories. GHCN-D dataset now available Amazon Web Services (AWS) S3, making easier access analyze valuable climate data. ghcn package provides tools efficiently work AWS-hosted dataset.","code":""},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"comparing-aws-bucket-vs-noaa-ncei-api","dir":"Articles","previous_headings":"Introduction to GHCN-D and AWS","what":"Comparing AWS Bucket vs NOAA NCEI API","title":"ghcn","text":"GHCN-D data traditionally accessible NOAA NCEI API, availability AWS offers distinct advantages. Let’s compare two methods: NOAA NCEI API: Provides --date data, including recent observations. AWS Bucket: Updated daily, may slight lag compared API. NOAA NCEI API: Can slower, especially large data requests, due server-side processing. AWS Bucket: Generally faster, especially bulk data access, files directly available. NOAA NCEI API: Offers flexible querying options, allowing complex filters server-side. AWS Bucket: Requires client-side filtering, ghcn package simplifies process. NOAA NCEI API: Provides data various formats, including CSV JSON. AWS Bucket: Data CSV format, ghcn package efficiently processes. NOAA NCEI API: rate limits may require authentication large requests. AWS Bucket: rate limits data access, standard AWS data transfer costs may apply. NOAA NCEI API: Can cumbersome accessing large volumes data. AWS Bucket: Excels providing easy access large datasets. NOAA NCEI API: Requires data downloaded local cloud storage processing. AWS Bucket: Allows direct integration AWS cloud computing services. ghcn package leverages advantages AWS-hosted dataset, providing fast efficient access GHCN-D data without need worry API rate limits complex query constructions. makes particularly suitable large-scale data analysis research projects require access extensive historical climate data. NOAA NCEI API remains valuable accessing current data specific queries, AWS bucket approach used ghcn package offers streamlined experience research analysis needs, especially working historical data scale.","code":""},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"ghcn","text":"can install ghcn package using one following methods:","code":""},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"using-remotes","dir":"Articles","previous_headings":"Installation","what":"Using remotes","title":"ghcn","text":"easiest way install package using remotes package:","code":"# install.packages(\"remotes\") remotes::install_github(\"joshbrinks/ghcn\")"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"cloning-the-repository","dir":"Articles","previous_headings":"Installation","what":"Cloning the repository","title":"ghcn","text":"want clone repository install package locally, follow steps: Clone repository: Open R RStudio set working directory cloned repository: Install package:","code":"git clone https://github.com/joshbrinks/ghcn.git setwd(\"path/to/ghcn\") devtools::install()"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"development-version","dir":"Articles","previous_headings":"Installation","what":"Development version","title":"ghcn","text":"install development version package, can use: install latest version develop branch. installation, can load package using:","code":"remotes::install_github(\"joshbrinks/ghcn@develop\") library(ghcn)"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"using-the-ghcn-package","dir":"Articles","previous_headings":"","what":"Using the ghcn Package","title":"ghcn","text":"ghcn package offers three main functions work GHCN-D data AWS: find_stations_aws(): Find weather stations near given location. get_inventory_aws(): Retrieve inventory information specific stations. get_data_aws(): Fetch actual weather data specified stations time periods. Let’s walk use functions together.","code":""},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"finding-nearby-stations","dir":"Articles","previous_headings":"Using the ghcn Package","what":"Finding Nearby Stations","title":"ghcn","text":"First, let’s find weather stations near New York City: gives us list stations within 50km radius NYC, sorted distance.","code":"nyc_stations <- find_stations_aws(lat = 40.7128, lon = -74.0060, radius = 50) head(nyc_stations) ##             id latitude longitude elevation  state ##         <char>    <num>     <num>     <num> <char> ## 1: USC00305816  40.7106  -74.0142      25.3     NY ## 2: USC00309580  40.7103  -74.0142      12.2     NY ## 3: US1NYNY0078  40.7339  -73.9844       6.1     NY ## 4: US1NYKN0025  40.6846  -73.9867       5.5     NY ## 5: US1NJHD0023  40.7326  -74.0510      30.2     NJ ## 6: USC00300958  40.6892  -73.9550      15.2     NY ##                              name gsn_flag hcn_crn_flag wmo_id geo_distance ##                            <char>   <char>       <char> <char>        <num> ## 1:                WORLD TRADE CTR                                  0.733160 ## 2:                WORLD TRADE CTR                                  0.744956 ## 3: STUYVESANT SQUARE PARK - NEW Y                                  2.969520 ## 4:                BROOKLYN 3.1 NW                                  3.532681 ## 5:            JERSEY CITY 1.6 NNE                                  4.385017 ## 6:                       BROOKLYN                                  5.036879"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"getting-station-inventory","dir":"Articles","previous_headings":"Using the ghcn Package","what":"Getting Station Inventory","title":"ghcn","text":"Now, let’s check data available first two stations: inventory shows us variables available station period record.","code":"station_ids <- nyc_stations$id[1:2] inventory <- get_inventory_aws(station_ids) head(inventory) ##     station_id element                                            description ##         <char>  <char>                                                 <char> ## 1: USC00305816    AWND Average daily wind speed (tenths of meters per second) ## 2: USC00305816    PRCP                           Precipitation (tenths of mm) ## 3: USC00305816    SNOW                                          Snowfall (mm) ## 4: USC00305816    SNWD                                        Snow depth (mm) ## 5: USC00305816    TMAX        Maximum temperature (tenths of degrees Celsius) ## 6: USC00305816    TMIN        Minimum temperature (tenths of degrees Celsius) ##    first_year last_year coverage_years completeness ##         <int>     <int>          <num>        <num> ## 1:       2022      2024              3            1 ## 2:       1871      2024            154            1 ## 3:       1884      2024            141            1 ## 4:       1893      2024            132            1 ## 5:       1871      2024            154            1 ## 6:       1871      2024            154            1"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"fetching-weather-data","dir":"Articles","previous_headings":"Using the ghcn Package","what":"Fetching Weather Data","title":"ghcn","text":"Let’s fetch temperature data first station year 2022:","code":"station_data <- get_data_aws(   station_id = station_ids[1],   start_date = \"2022-01-01\",   end_date = \"2022-12-31\",   variables = c(\"TMAX\", \"TMIN\") ) head(station_data) ## Key: <ID, DATE> ##             ID       DATE  TMAX  TMIN ##         <char>     <Date> <int> <int> ## 1: USC00305816 2022-02-09    67    22 ## 2: USC00305816 2022-02-10   111    -6 ## 3: USC00305816 2022-02-11   128   111 ## 4: USC00305816 2022-02-12   133    44 ## 5: USC00305816 2022-02-13   139    -6 ## 6: USC00305816 2022-02-14   100   -11"},{"path":[]},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"multiple-stations","dir":"Articles","previous_headings":"Demonstrating Functionality","what":"Multiple Stations","title":"ghcn","text":"can fetch data multiple stations :","code":"multi_station_data <- get_data_aws(   station_id = station_ids,   start_date = \"2022-01-01\",   end_date = \"2022-12-31\",   variables = c(\"TMAX\", \"TMIN\", \"PRCP\") ) head(multi_station_data) ## Key: <ID, DATE> ##             ID       DATE  PRCP  TMAX  TMIN ##         <char>     <Date> <int> <int> <int> ## 1: USC00305816 2022-02-01     0    NA    NA ## 2: USC00305816 2022-02-02     0    NA    NA ## 3: USC00305816 2022-02-03     0    NA    NA ## 4: USC00305816 2022-02-04     0    NA    NA ## 5: USC00305816 2022-02-05     0    NA    NA ## 6: USC00305816 2022-02-06     0    NA    NA"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"long-format-data","dir":"Articles","previous_headings":"Demonstrating Functionality","what":"Long Format Data","title":"ghcn","text":"default, get_data_aws() returns data wide format. can get long format data specifying format parameter:","code":"long_data <- get_data_aws(   station_id = station_ids[1],   start_date = \"2022-01-01\",   end_date = \"2022-12-31\",   variables = c(\"TMAX\", \"TMIN\", \"PRCP\"),   format = \"long\" ) head(long_data) ##             ID       DATE ELEMENT DATA_VALUE M_FLAG Q_FLAG S_FLAG OBS_TIME ##         <char>     <Date>  <char>      <int> <char> <char> <char>    <int> ## 1: USC00305816 2022-02-01    PRCP          0                    7       NA ## 2: USC00305816 2022-02-02    PRCP          0                    7       NA ## 3: USC00305816 2022-02-03    PRCP          0                    7       NA ## 4: USC00305816 2022-02-04    PRCP          0                    7       NA ## 5: USC00305816 2022-02-05    PRCP          0                    7       NA ## 6: USC00305816 2022-02-06    PRCP          0                    7       NA"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"data-visualization-and-analysis","dir":"Articles","previous_headings":"","what":"Data Visualization and Analysis","title":"ghcn","text":"Let’s visualize temperature data one station using ggplot2:  can also look distribution daily temperature ranges:  Let’s analyze precipitation patterns:","code":"ggplot(station_data, aes(x = DATE)) +   geom_line(aes(y = TMAX, color = \"Max Temp\")) +   geom_line(aes(y = TMIN, color = \"Min Temp\")) +   scale_color_manual(values = c(\"Max Temp\" = \"red\", \"Min Temp\" = \"blue\")) +   labs(title = \"Daily Temperature Range in 2022\",        subtitle = paste(\"Station:\", station_ids[1]),        x = \"Date\", y = \"Temperature (tenths of degrees Celsius)\",        color = \"Temperature Type\") +   theme_minimal() station_data[, temp_range := TMAX - TMIN]  ggplot(station_data, aes(x = temp_range)) +   geom_histogram(binwidth = 10, fill = \"skyblue\", color = \"black\") +   labs(title = \"Distribution of Daily Temperature Ranges\",        subtitle = paste(\"Station:\", station_ids[1]),        x = \"Temperature Range (tenths of degrees Celsius)\",        y = \"Count\") +   theme_minimal() ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). multi_station_data[, month := month(DATE)] monthly_precip <- multi_station_data[, .(total_precip = sum(PRCP, na.rm = TRUE)),                                      by = .(ID, month)]  ggplot(monthly_precip, aes(x = factor(month), y = total_precip, fill = ID)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   scale_x_discrete(labels = month.abb) +   labs(title = \"Monthly Precipitation in 2022\",        x = \"Month\", y = \"Total Precipitation (tenths of mm)\",        fill = \"Station ID\") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 45, hjust = 1))"},{"path":"https://joshbrinks.github.io/ghcn/articles/ghcn.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"ghcn","text":"ghcn package provides powerful tools accessing analyzing GHCN-D data AWS. combining functions data manipulation visualization libraries like data.table ggplot2, can easily explore climate patterns trends. Remember cite GHCN-D dataset work: Menne, M.J., . Durre, B. Korzeniewski, S. McNeal, K. Thomas, X. Yin, S. Anthony, R. Ray, R.S. Vose, B.E.Gleason, T.G. Houston, 2012: Global Historical Climatology Network - Daily (GHCN-Daily), Version 3. [indicate subset used following decimal, e.g. Version 3.12]. NOAA National Climatic Data Center. http://doi.org/10.7289/V5D21VHZ [access date].","code":""},{"path":"https://joshbrinks.github.io/ghcn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://joshbrinks.github.io/ghcn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brinks J (2024). ghcn: Provides interface NCEI GHCN-Daly dataset.. R package version 0.1.0, https://joshbrinks.github.io/ghcn/.","code":"@Manual{,   title = {ghcn: Provides an interface to NCEI GHCN-Daly dataset.},   author = {Joshua Brinks},   year = {2024},   note = {R package version 0.1.0},   url = {https://joshbrinks.github.io/ghcn/}, }"},{"path":"https://joshbrinks.github.io/ghcn/index.html","id":"ghcn","dir":"","previous_headings":"","what":"Provides an interface to NCEI GHCN-Daly dataset.","title":"Provides an interface to NCEI GHCN-Daly dataset.","text":"ghcn package provides streamlined interface accessing analyzing Global Historical Climatology Network - Daily (GHCN-D) data hosted Amazon Web Services (AWS). leveraging AWS-hosted GHCN-D dataset, package enables researchers data scientists quickly access vast amounts historical climate data without worrying API rate limits complex query constructions. Whether ’re conducting large-scale climate studies, analyzing local weather patterns, integrating climate data broader research projects, ghcn provides user-friendly efficient toolset exploring utilizing GHCN-D data.","code":""},{"path":[]},{"path":"https://joshbrinks.github.io/ghcn/index.html","id":"pak","dir":"","previous_headings":"Installation","what":"pak","title":"Provides an interface to NCEI GHCN-Daly dataset.","text":"can install development version ghcn GitHub :","code":"# install.packages(\"pak\") pak::pak(\"joshbrinks/ghcn\")"},{"path":"https://joshbrinks.github.io/ghcn/index.html","id":"cloning-the-repository","dir":"","previous_headings":"Installation","what":"Cloning the repository","title":"Provides an interface to NCEI GHCN-Daly dataset.","text":"want clone repository install package locally, follow steps: Clone repository: Open R RStudio set working directory cloned repository: Install package:","code":"git clone https://github.com/yourusername/ghcn.git setwd(\"path/to/ghcn\") devtools::install()"},{"path":"https://joshbrinks.github.io/ghcn/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Provides an interface to NCEI GHCN-Daly dataset.","text":"install development version package, can use: install latest version develop branch. installation, can load package using:","code":"remotes::install_github(\"yourusername/ghcn@develop\") library(ghcn)"},{"path":"https://joshbrinks.github.io/ghcn/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Provides an interface to NCEI GHCN-Daly dataset.","text":"’s quick example use main functions ghcn package:  detailed examples usage, please refer package vignettes.","code":"library(ghcn)  # Find weather stations near New York City nyc_stations <- find_stations_aws(lat = 40.7128, lon = -74.0060, radius = 50)  # Get inventory for the first station inventory <- get_inventory_aws(nyc_stations$id[1])  # Fetch temperature data for 2022 data <- get_data_aws(   station_id = nyc_stations$id[1],   start_date = \"2022-01-01\",   end_date = \"2022-12-31\",   variables = c(\"TMAX\", \"TMIN\") )  # Basic plot of the data plot(data$DATE, data$TMAX, type = \"l\", col = \"red\",       xlab = \"Date\", ylab = \"Temperature (tenths of °C)\") lines(data$DATE, data$TMIN, col = \"blue\") legend(\"topright\", legend = c(\"TMAX\", \"TMIN\"), col = c(\"red\", \"blue\"), lty = 1)"},{"path":"https://joshbrinks.github.io/ghcn/reference/find_stations_aws.html","id":null,"dir":"Reference","previous_headings":"","what":"Find GHCN-D Stations from AWS Data with Fuzzy Matching — find_stations_aws","title":"Find GHCN-D Stations from AWS Data with Fuzzy Matching — find_stations_aws","text":"function finds GHCN-D weather stations within specified radius given location /matching given name pattern using fuzzy matching, using station data stored AWS-based GHCN package.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/find_stations_aws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find GHCN-D Stations from AWS Data with Fuzzy Matching — find_stations_aws","text":"","code":"find_stations_aws(   lat = NULL,   lon = NULL,   radius = NULL,   name_pattern = NULL,   max_distance = 0.5,   max_stations = 10 )"},{"path":"https://joshbrinks.github.io/ghcn/reference/find_stations_aws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find GHCN-D Stations from AWS Data with Fuzzy Matching — find_stations_aws","text":"lat Numeric. Latitude center point decimal degrees. lon Numeric. Longitude center point decimal degrees. radius Numeric. Search radius kilometers. name_pattern Character. Pattern search station names. Default NULL. max_distance Numeric. Maximum string distance fuzzy matching. Default 0.2. max_stations Integer. Maximum number stations return. Default 10.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/find_stations_aws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find GHCN-D Stations from AWS Data with Fuzzy Matching — find_stations_aws","text":"data.table containing information nearby /name-matched stations, sorted relevance distance.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/find_stations_aws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find GHCN-D Stations from AWS Data with Fuzzy Matching — find_stations_aws","text":"","code":"find_stations_aws(40.7128, -74.0060, 50)  # Nearby stations to New York City #>              id latitude longitude elevation  state #>          <char>    <num>     <num>     <num> <char> #>  1: USC00305816  40.7106  -74.0142      25.3     NY #>  2: USC00309580  40.7103  -74.0142      12.2     NY #>  3: US1NYNY0078  40.7339  -73.9844       6.1     NY #>  4: US1NYKN0025  40.6846  -73.9867       5.5     NY #>  5: US1NJHD0023  40.7326  -74.0510      30.2     NJ #>  6: USC00300958  40.6892  -73.9550      15.2     NY #>  7: USC00284339  40.7419  -74.0572      41.1     NJ #>  8: US1NYNY0082  40.7613  -73.9929      25.3     NY #>  9: US1NYKN0059  40.6597  -73.9828      51.8     NY #> 10: USC00304632  40.7333  -73.9333       3.0     NY #>                               name gsn_flag hcn_crn_flag wmo_id geo_distance #>                             <char>   <char>       <char> <char>        <num> #>  1:                WORLD TRADE CTR                                  0.733160 #>  2:                WORLD TRADE CTR                                  0.744956 #>  3: STUYVESANT SQUARE PARK - NEW Y                                  2.969520 #>  4:                BROOKLYN 3.1 NW                                  3.532681 #>  5:            JERSEY CITY 1.6 NNE                                  4.385017 #>  6:                       BROOKLYN                                  5.036879 #>  7:                    JERSEY CITY                                  5.393001 #>  8: MATTHEWS PALMER PLAYGROUND - N                                  5.504740 #>  9:               BROOKLYN 2.4 WSW                                  6.220062 #> 10:                    LAUREL HILL                                  6.536863 find_stations_aws(40.7128, -74.0060, 50, name_pattern = \"Central Prk\") #>        id latitude longitude elevation  state   name gsn_flag hcn_crn_flag #>    <char>    <num>     <num>     <num> <char> <char>   <char>       <char> #> 1:   <NA>       NA        NA        NA   <NA>   <NA>     <NA>         <NA> #>    wmo_id name_distance geo_distance #>    <char>         <num>        <num> #> 1:   <NA>            NA           NA find_stations_aws(lat = NULL, lon = NULL, radius = NULL, name_pattern = \"JFK Airprt\") #> Error in find_stations_aws(lat = NULL, lon = NULL, radius = NULL, name_pattern = \"JFK Airprt\"): lat, lon, and radius must be numeric values"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_data_aws.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve GHCN-D Data for Specific Stations — get_data_aws","title":"Retrieve GHCN-D Data for Specific Stations — get_data_aws","text":"function retrieves GHCN-D data specified station(s), time period, variable(s) directly NOAA GHCN-D S3 bucket.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_data_aws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve GHCN-D Data for Specific Stations — get_data_aws","text":"","code":"get_data_aws(station_id, start_date, end_date, variables, format = \"wide\")"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_data_aws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve GHCN-D Data for Specific Stations — get_data_aws","text":"station_id Character vector. One 11-character GHCN station identification code(s). start_date Character. Start date format YYYY, YYYY-MM, YYYY-MM-DD. end_date Character. End date format YYYY, YYYY-MM, YYYY-MM-DD. variables Character vector. GHCN-D element code(s) retrieve (e.g., c(\"TMAX\", \"TMIN\", \"PRCP\")). format Character. Output format, either \"wide\" (default) \"long\".","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_data_aws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve GHCN-D Data for Specific Stations — get_data_aws","text":"data.table containing requested GHCN-D data.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_data_aws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve GHCN-D Data for Specific Stations — get_data_aws","text":"","code":"# Retrieve temperature data for a station from January 2020 to January 2023 nyc_temp_data <- get_data_aws(\"USC00305816\", \"2020-01\", \"2023-01\", c(\"TMAX\", \"TMIN\"))"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA GHCN-Daily Data for a Specific Station — get_ghcn_daily_data","title":"Get NOAA GHCN-Daily Data for a Specific Station — get_ghcn_daily_data","text":"function retrieves time series data NOAA GHCN-Daily dataset specific weather station within given date range.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA GHCN-Daily Data for a Specific Station — get_ghcn_daily_data","text":"","code":"get_ghcn_daily_data(station_id, start_date, end_date, token, datatype = NULL)"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NOAA GHCN-Daily Data for a Specific Station — get_ghcn_daily_data","text":"station_id Character. ID weather station. start_date Date character string \"YYYY-MM-DD\" format. start date data retrieval. end_date Date character string \"YYYY-MM-DD\" format. end date data retrieval. token Character. NOAA API token authentication. datatype Character vector. Types data retrieve (e.g., \"TMAX\", \"TMIN\", \"PRCP\"). Default available types.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NOAA GHCN-Daily Data for a Specific Station — get_ghcn_daily_data","text":"data frame containing time series data specified station date range, including: date Date. date observation. datatype Character. type data (e.g., \"TMAX\", \"TMIN\", \"PRCP\"). value Numeric. recorded value datatype. attributes Character. attributes associated value.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NOAA GHCN-Daily Data for a Specific Station — get_ghcn_daily_data","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_ghcn_daily_data(   station_id = \"USW00094728\",  # Example station ID   start_date = \"2022-01-01\",   end_date = \"2022-12-31\",   token = \"your_noaa_token_here\" ) print(head(data)) } # }"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Nearest NOAA GHCN-Daily Weather Stations with Available Variables — get_ghcn_daily_stations","title":"Get Nearest NOAA GHCN-Daily Weather Stations with Available Variables — get_ghcn_daily_stations","text":"function retrieves nearest weather stations NOAA GHCN-Daily dataset given latitude longitude coordinate. returns information station, including location, elevation, date range available data, available variables.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Nearest NOAA GHCN-Daily Weather Stations with Available Variables — get_ghcn_daily_stations","text":"","code":"get_ghcn_daily_stations(lat, lon, token, radius = 50, limit = 5)"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Nearest NOAA GHCN-Daily Weather Stations with Available Variables — get_ghcn_daily_stations","text":"lat Numeric. Latitude point interest. lon Numeric. Longitude point interest. token Character. NOAA API token authentication. radius Numeric. Search radius kilometers. Default 50 km. limit Integer. Maximum number stations return. Default 5.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Nearest NOAA GHCN-Daily Weather Stations with Available Variables — get_ghcn_daily_stations","text":"data frame containing information nearest weather stations, including: id Character. station identifier. name Character. name station. latitude Numeric. station's latitude. longitude Numeric. station's longitude. elevation Numeric. station's elevation. mindate Date. earliest date station data. maxdate Date. latest date station data. distance Numeric. calculated distance input coordinates degrees. available_vars Character. Comma-separated list available variables.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_ghcn_daily_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Nearest NOAA GHCN-Daily Weather Stations with Available Variables — get_ghcn_daily_stations","text":"","code":"if (FALSE) { # \\dontrun{ stations <- get_ghcn_daily_stations(lat = 40.7128, lon = -74.006, token = \"your_noaa_token_here\") print(stations) } # }"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_inventory_aws.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GHCN-D Station Inventory Information for Multiple Stations — get_inventory_aws","title":"Get GHCN-D Station Inventory Information for Multiple Stations — get_inventory_aws","text":"function retrieves inventory information specified GHCN-D station(s), including available variables, coverage periods, relevant details.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_inventory_aws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GHCN-D Station Inventory Information for Multiple Stations — get_inventory_aws","text":"","code":"get_inventory_aws(station_ids)"},{"path":"https://joshbrinks.github.io/ghcn/reference/get_inventory_aws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GHCN-D Station Inventory Information for Multiple Stations — get_inventory_aws","text":"station_ids Character vector. One 11-character GHCN station identification codes.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_inventory_aws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GHCN-D Station Inventory Information for Multiple Stations — get_inventory_aws","text":"data.table containing inventory information specified stations.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/get_inventory_aws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GHCN-D Station Inventory Information for Multiple Stations — get_inventory_aws","text":"","code":"# Get inventory for two stations get_inventory_aws(c(\"USW00094728\", \"USC00305816\")) #>      station_id element #>          <char>  <char> #>  1: USC00305816    AWND #>  2: USC00305816    PRCP #>  3: USC00305816    SNOW #>  4: USC00305816    SNWD #>  5: USC00305816    TMAX #>  6: USC00305816    TMIN #>  7: USC00305816    TOBS #>  8: USC00305816    WT05 #>  9: USW00094728    ACMH #> 10: USW00094728    ACSH #> 11: USW00094728    ADPT #> 12: USW00094728    ASLP #> 13: USW00094728    ASTP #> 14: USW00094728    AWBT #> 15: USW00094728    AWND #> 16: USW00094728    DAEV #> 17: USW00094728    DASF #> 18: USW00094728    DAWM #> 19: USW00094728    EVAP #> 20: USW00094728    FMTM #> 21: USW00094728    MDEV #> 22: USW00094728    MDSF #> 23: USW00094728    MDWM #> 24: USW00094728    PGTM #> 25: USW00094728    PRCP #> 26: USW00094728    PSUN #> 27: USW00094728    RHAV #> 28: USW00094728    RHMN #> 29: USW00094728    RHMX #> 30: USW00094728    SNOW #> 31: USW00094728    SNWD #> 32: USW00094728    TAVG #> 33: USW00094728    TMAX #> 34: USW00094728    TMIN #> 35: USW00094728    TOBS #> 36: USW00094728    TSUN #> 37: USW00094728    WDF1 #> 38: USW00094728    WDF2 #> 39: USW00094728    WDF5 #> 40: USW00094728    WDFG #> 41: USW00094728    WDFM #> 42: USW00094728    WDMV #> 43: USW00094728    WESD #> 44: USW00094728    WSF1 #> 45: USW00094728    WSF2 #> 46: USW00094728    WSF5 #> 47: USW00094728    WSFG #> 48: USW00094728    WSFM #> 49: USW00094728    WT01 #> 50: USW00094728    WT02 #> 51: USW00094728    WT03 #> 52: USW00094728    WT04 #> 53: USW00094728    WT05 #> 54: USW00094728    WT06 #> 55: USW00094728    WT07 #> 56: USW00094728    WT08 #> 57: USW00094728    WT09 #> 58: USW00094728    WT11 #> 59: USW00094728    WT13 #> 60: USW00094728    WT14 #> 61: USW00094728    WT15 #> 62: USW00094728    WT16 #> 63: USW00094728    WT17 #> 64: USW00094728    WT18 #> 65: USW00094728    WT19 #> 66: USW00094728    WT21 #> 67: USW00094728    WT22 #>      station_id element #>                                                                       description #>                                                                            <char> #>  1:                        Average daily wind speed (tenths of meters per second) #>  2:                                                  Precipitation (tenths of mm) #>  3:                                                                 Snowfall (mm) #>  4:                                                               Snow depth (mm) #>  5:                               Maximum temperature (tenths of degrees Celsius) #>  6:                               Minimum temperature (tenths of degrees Celsius) #>  7:            Temperature at the time of observation (tenths of degrees Celsius) #>  8:                                                 Hail (may include small hail) #>  9:                             Average Cloudiness Midnight to Midnight (percent) #> 10:                                Average Cloudiness Sunrise to Sunset (percent) #> 11:                                                     Description not available #> 12:                                                     Description not available #> 13:                                                     Description not available #> 14:                                                     Description not available #> 15:                        Average daily wind speed (tenths of meters per second) #> 16:                                                     Description not available #> 17:                                                     Description not available #> 18:                                                     Description not available #> 19:                      Evaporation of water from evaporation pan (tenths of mm) #> 20: Time of Fastest Mile or Fastest 1-minute wind (hours and minutes, i.e., HHMM) #> 21:                                     Multiday evaporation total (tenths of mm) #> 22:                                                     Description not available #> 23:                                                     Description not available #> 24:                                Peak gust time (hours and minutes, i.e., HHMM) #> 25:                                                  Precipitation (tenths of mm) #> 26:                                  Daily percent of possible sunshine (percent) #> 27:                                                     Description not available #> 28:                                                     Description not available #> 29:                                                     Description not available #> 30:                                                                 Snowfall (mm) #> 31:                                                               Snow depth (mm) #> 32:                               Average temperature (tenths of degrees Celsius) #> 33:                               Maximum temperature (tenths of degrees Celsius) #> 34:                               Minimum temperature (tenths of degrees Celsius) #> 35:            Temperature at the time of observation (tenths of degrees Celsius) #> 36:                                                Daily total sunshine (minutes) #> 37:                                  Direction of fastest 1-minute wind (degrees) #> 38:                                  Direction of fastest 2-minute wind (degrees) #> 39:                                  Direction of fastest 5-second wind (degrees) #> 40:                                         Direction of peak wind gust (degrees) #> 41:                                         Fastest mile wind direction (degrees) #> 42:                                                    24-hour wind movement (km) #> 43:                         Water equivalent of snow on the ground (tenths of mm) #> 44:                     Fastest 1-minute wind speed (tenths of meters per second) #> 45:                     Fastest 2-minute wind speed (tenths of meters per second) #> 46:                     Fastest 5-second wind speed (tenths of meters per second) #> 47:                                                    Peak gust wind speed (mph) #> 48:                         Fastest mile wind speed (tenths of meters per second) #> 49:                                                 Fog, ice fog, or freezing fog #> 50:          Heavy fog or heaving freezing fog (not always distinguished from 01) #> 51:                                                                       Thunder #> 52:                               Ice pellets, sleet, snow pellets, or small hail #> 53:                                                 Hail (may include small hail) #> 54:                                                                 Glaze or rime #> 55:        Dust, volcanic ash, blowing dust, blowing sand, or blowing obstruction #> 56:                                                                 Smoke or haze #> 57:                                                      Blowing or drifting snow #> 58:                                                        High or damaging winds #> 59:                                                                          Mist #> 60:                                                                       Drizzle #> 61:                                                              Freezing drizzle #> 62:               Rain (may include freezing rain, drizzle, and freezing drizzle) #> 63:                                                                 Freezing rain #> 64:                              Snow, snow pellets, snow grains, or ice crystals #> 65:                                               Unknown source of precipitation #> 66:                                                                    Ground fog #> 67:                                                       Ice fog or freezing fog #>                                                                       description #>     first_year last_year coverage_years completeness #>          <int>     <int>          <num>        <num> #>  1:       2022      2024              3   1.00000000 #>  2:       1871      2024            154   1.00000000 #>  3:       1884      2024            141   1.00000000 #>  4:       1893      2024            132   1.00000000 #>  5:       1871      2024            154   1.00000000 #>  6:       1871      2024            154   1.00000000 #>  7:       2022      2024              3   1.00000000 #>  8:       1957      1957              1   0.01470588 #>  9:       1965      1990             26   0.43333333 #> 10:       1965      1966              2   0.03333333 #> 11:       2006      2024             19   1.00000000 #> 12:       2006      2024             19   1.00000000 #> 13:       2006      2024             19   1.00000000 #> 14:       2006      2024             19   1.00000000 #> 15:       1984      2024             41   1.00000000 #> 16:       1950      1959             10   0.13333333 #> 17:       1877      1911             35   0.23648649 #> 18:       1956      1959              4   0.05797101 #> 19:       1948      1959             12   0.15584416 #> 20:       1984      2011             28   0.68292683 #> 21:       1950      1959             10   0.13333333 #> 22:       1877      1911             35   0.23648649 #> 23:       1956      1959              4   0.05797101 #> 24:       1966      2017             52   0.88135593 #> 25:       1869      2024            156   1.00000000 #> 26:       1965      1981             17   0.28333333 #> 27:       2006      2024             19   1.00000000 #> 28:       2006      2024             19   1.00000000 #> 29:       2006      2024             19   1.00000000 #> 30:       1869      2024            156   1.00000000 #> 31:       1888      2024            137   1.00000000 #> 32:       1998      2005              8   0.29629630 #> 33:       1869      2024            156   1.00000000 #> 34:       1869      2024            156   1.00000000 #> 35:       1952      1952              1   0.01369863 #> 36:       1965      2021             57   0.95000000 #> 37:       1983      1995             13   0.30952381 #> 38:       1995      2024             30   1.00000000 #> 39:       1995      2024             30   1.00000000 #> 40:       1966      1995             30   0.50847458 #> 41:       1965      1981             17   0.28333333 #> 42:       1948      1959             12   0.15584416 #> 43:       1973      1976              4   0.07692308 #> 44:       1978      1995             18   0.38297872 #> 45:       1995      2024             30   1.00000000 #> 46:       1995      2024             30   1.00000000 #> 47:       1966      1995             30   0.50847458 #> 48:       1965      1981             17   0.28333333 #> 49:       1995      2024             30   1.00000000 #> 50:       1995      2024             30   1.00000000 #> 51:       1962      2024             63   1.00000000 #> 52:       1891      2023            133   0.99253731 #> 53:       1973      2021             49   0.94230769 #> 54:       1963      2024             62   1.00000000 #> 55:       1921      2010             90   0.86538462 #> 56:       1995      2024             30   1.00000000 #> 57:       1892      2010            119   0.89473684 #> 58:       1997      2012             16   0.57142857 #> 59:       1996      2013             18   0.62068966 #> 60:       1984      2013             30   0.73170732 #> 61:       1984      2003             20   0.48780488 #> 62:       1962      2013             52   0.82539683 #> 63:       1984      2011             28   0.68292683 #> 64:       1962      2013             52   0.82539683 #> 65:       1995      2013             19   0.63333333 #> 66:       1999      1999              1   0.03846154 #> 67:       1997      2013             17   0.60714286 #>     first_year last_year coverage_years completeness"},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ghcn: Provides an interface to NCEI GHCN-Daly dataset. — ghcn-package","title":"ghcn: Provides an interface to NCEI GHCN-Daly dataset. — ghcn-package","text":"(maybe one line) Use four spaces indenting paragraphs within Description.","code":""},{"path":[]},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"GHCN-D Inventory Data — ghcn.inventory","title":"GHCN-D Inventory Data — ghcn.inventory","text":"dataset containing inventory information station element Global Historical Climatology Network - Daily (GHCN-D).","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GHCN-D Inventory Data — ghcn.inventory","text":"","code":"ghcn.inventory"},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.inventory.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GHCN-D Inventory Data — ghcn.inventory","text":"data table 6 variables: id character. 11-character station identification code. latitude numeric. Latitude station decimal degrees. longitude numeric. Longitude station decimal degrees. element character. Element type (e.g., PRCP precipitation, TMAX maximum temperature). firstyear integer. First year record station element. lastyear integer. Last year record station element.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.inventory.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GHCN-D Inventory Data — ghcn.inventory","text":"http://noaa-ghcn-pds.s3.amazonaws.com/ghcnd-inventory.txt","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.stations.html","id":null,"dir":"Reference","previous_headings":"","what":"GHCN-D Stations Data — ghcn.stations","title":"GHCN-D Stations Data — ghcn.stations","text":"dataset containing information weather stations Global Historical Climatology Network - Daily (GHCN-D).","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GHCN-D Stations Data — ghcn.stations","text":"","code":"ghcn.stations"},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GHCN-D Stations Data — ghcn.stations","text":"data table 9 variables: id character. 11-character station identification code. latitude numeric. Latitude station decimal degrees. longitude numeric. Longitude station decimal degrees. elevation numeric. Elevation station meters. state character. U.S. postal code state (U.S. Canadian stations ). name character. Name station. gsn_flag character. Flag indicating station part GCOS Surface Network (GSN). hcn_crn_flag character. Flag indicating station part U.S. Historical Climatology Network (HCN) U.S. Climate Reference Network (CRN). wmo_id character. World Meteorological Organization (WMO) number station.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn.stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GHCN-D Stations Data — ghcn.stations","text":"http://noaa-ghcn-pds.s3.amazonaws.com/ghcnd-stations.txt","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn_daily_datatypes.html","id":null,"dir":"Reference","previous_headings":"","what":"GHCN Daily Datatypes — ghcn_daily_datatypes","title":"GHCN Daily Datatypes — ghcn_daily_datatypes","text":"dataset containing Global Historical Climatology Network (GHCN) daily datatypes descriptions.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn_daily_datatypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GHCN Daily Datatypes — ghcn_daily_datatypes","text":"","code":"ghcn_daily_datatypes"},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn_daily_datatypes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GHCN Daily Datatypes — ghcn_daily_datatypes","text":"data frame 56 rows 2 variables: datatype GHCN daily datatype code description Description datatype represents","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/ghcn_daily_datatypes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GHCN Daily Datatypes — ghcn_daily_datatypes","text":"https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/parse_flexible_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Flexible Date Format — parse_flexible_date","title":"Parse Flexible Date Format — parse_flexible_date","text":"Parse Flexible Date Format","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/parse_flexible_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Flexible Date Format — parse_flexible_date","text":"","code":"parse_flexible_date(date_str, end_of_period = FALSE)"},{"path":"https://joshbrinks.github.io/ghcn/reference/parse_flexible_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Flexible Date Format — parse_flexible_date","text":"date_str Character. Date string format YYYY, YYYY-MM, YYYY-MM-DD. end_of_period Logical. TRUE, return last day period YYYY YYYY-MM formats.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/parse_flexible_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Flexible Date Format — parse_flexible_date","text":"Date object.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/visualize_ghcn_daily_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize NOAA GHCN-Daily Data with Facets — visualize_ghcn_daily_data","title":"Visualize NOAA GHCN-Daily Data with Facets — visualize_ghcn_daily_data","text":"function creates faceted time series plot variables retrieved NOAA GHCN-Daily dataset, using comprehensive datatype information ghcn::ghcn_daily_datatypes custom color palette.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/visualize_ghcn_daily_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize NOAA GHCN-Daily Data with Facets — visualize_ghcn_daily_data","text":"","code":"visualize_ghcn_daily_data(data, station_name)"},{"path":"https://joshbrinks.github.io/ghcn/reference/visualize_ghcn_daily_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize NOAA GHCN-Daily Data with Facets — visualize_ghcn_daily_data","text":"data data frame returned get_ghcn_daily_data function. station_name Character. name station (plot title).","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/visualize_ghcn_daily_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize NOAA GHCN-Daily Data with Facets — visualize_ghcn_daily_data","text":"ggplot object faceted plots variable single row.","code":""},{"path":"https://joshbrinks.github.io/ghcn/reference/visualize_ghcn_daily_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize NOAA GHCN-Daily Data with Facets — visualize_ghcn_daily_data","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_ghcn_daily_data(   station_id = \"USW00094728\",   start_date = \"2022-01-01\",   end_date = \"2022-12-31\",   token = \"your_noaa_token_here\" ) plot <- visualize_ghcn_daily_data(data, \"Central Park, NY\") print(plot) } # }"}]
